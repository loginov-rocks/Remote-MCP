{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Outputs": {
    "ApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "ApiGateway",
          "ApiEndpoint"
        ]
      }
    }
  },
  "Parameters": {
    "AccessTokenSecret": {
      "Description": "Access Token Secret",
      "Type": "String"
    },
    "AccessTokenTtl": {
      "Default": 900,
      "Description": "Access Token TTL (in seconds)",
      "Type": "Number"
    },
    "AuthCodesTtl": {
      "Default": 600,
      "Description": "Auth Codes TTL (in seconds)",
      "Type": "Number"
    },
    "RefreshTokenSecret": {
      "Description": "Refresh Token Secret",
      "Type": "String"
    },
    "RefreshTokenTtl": {
      "Default": 2592000,
      "Description": "Refresh Token TTL (in seconds)",
      "Type": "Number"
    }
  },
  "Resources": {
    "ApiGateway": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-api-gw"
        },
        "ProtocolType": "HTTP"
      }
    },
    "OAuthFunctionIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGateway"
        },
        "IntegrationMethod": "POST",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OAuthFunctionArn}/invocations",
            {
              "OAuthFunctionArn": {
                "Fn::GetAtt": [
                  "OAuthFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "OAuthRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGateway"
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$default",
        "Target": {
          "Fn::Sub": "integrations/${OAuthFunctionIntegration}"
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGateway"
        },
        "AutoDeploy": true,
        "StageName": "$default"
      }
    },
    "AuthCodesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "code",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "code",
            "KeyType": "HASH"
          }
        ],
        "TableName": {
          "Fn::Sub": "${AWS::StackName}-auth-codes-table"
        },
        "TimeToLiveSpecification": {
          "AttributeName": "expiration",
          "Enabled": true
        }
      }
    },
    "OAuthFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Effect": "Allow"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-oauth-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "AuthCodesTable",
                      "Arn"
                    ]
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-oauth-function-role"
        }
      }
    },
    "OAuthFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "ZipFile": "exports.handler = async (event) => ({ body: JSON.stringify(event), headers: { 'content-type': 'application/json' }, statusCode: 200 });"
        },
        "Environment": {
          "Variables": {
            "ACCESS_TOKEN_SECRET": {
              "Ref": "AccessTokenSecret"
            },
            "ACCESS_TOKEN_TTL": {
              "Ref": "AccessTokenTtl"
            },
            "AUTH_CODES_TABLE_NAME": {
              "Ref": "AuthCodesTable"
            },
            "AUTH_CODES_TTL": {
              "Ref": "AuthCodesTtl"
            },
            "REFRESH_TOKEN_SECRET": {
              "Ref": "RefreshTokenSecret"
            },
            "REFRESH_TOKEN_TTL": {
              "Ref": "RefreshTokenTtl"
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-oauth-function"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "OAuthFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs22.x"
      }
    },
    "OAuthFunctionPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "OAuthFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/${Stage}/*"
        }
      }
    }
  }
}
